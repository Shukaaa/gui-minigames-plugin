name: Build and Release Minecraft Plugin

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  build:
    name: Build Plugin
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make Gradle executable
        run: chmod +x gradlew

      - name: Build the Plugin
        run: ./gradlew shadowJar

      - name: Find Build Artifact
        id: find_jar
        run: echo "JAR_PATH=$(find build/libs -name '*.jar' | head -n 1)" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: minecraft-plugin
          path: ${{ env.JAR_PATH }}

  publish:
    name: Publish to GitHub Packages
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Publish to GitHub Packages
        env:
          USERNAME: ${{ secrets.GITHUB_ACTOR }}
          TOKEN: ${{ secrets.GITHUB_PACKAGES_TOKEN }}
        run: ./gradlew publish

  release:
    name: Create GitHub Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Built Jar
        uses: actions/download-artifact@v4
        with:
          name: minecraft-plugin
          path: .

      - name: Get Version from Tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          files: "*.jar"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
